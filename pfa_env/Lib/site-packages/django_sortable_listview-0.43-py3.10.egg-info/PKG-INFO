Metadata-Version: 2.1
Name: django-sortable-listview
Version: 0.43
Summary: An extension of django's ListView that provides sorting
Home-page: https://github.com/aptivate/django-sortable-listview
Author: Aptivate
Author-email: info@aptivate.org
License: License :: OSI Approved :: MIT License
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Description-Content-Type: text/markdown
License-File: LICENSE.txt

[![Build Status](https://travis-ci.org/aptivate/django-sortable-listview.svg?branch=master)](https://travis-ci.org/aptivate/django-sortable-listview) [![Coverage Status](https://coveralls.io/repos/aptivate/django-sortable-listview/badge.svg?branch=master)](https://coveralls.io/r/aptivate/django-sortable-listview?branch=master)

django-sortable-listview
========================
An extension of django's ListView that provides sorting.

Features:
- Works with django's built in pagination.
- Contains templates & css for pagination and sort buttons (or just use the context_data and build your own).
- Adds an arrow to show the sort direction on the active sort.
- Knows what the next sort is (i.e. if you're already sorted by title in one direction, clicking on the title button/link again will sort it in the other direction).
- Lets you specify default sort for your list (defaults to -id) and for each of the sortable fields.
- Modifies the queryset, so your database does your sorting.
- Maintains additional query strings (configurable)

Requirements
============

These are the supported versions. Older versions may also work.

    * Python (2.7, 3.5, 3.6, 3.7)
    * Django (1.11, 2.1, 2.2)


Install
=======
Using pip::

    pip install django-sortable-listview

If you want to use the provided templates and CSS add ``'sortable_listview'`` to your INSTALLED_APPS in your django settings.

To see how to include the css and templates in your application, look at the example project. The css is just standard bootstrap.


Example Project
===============
![Screenshot of example project](/example_project/screenshot.png)

To run the example project. First make sure django and django-sortable-listview are on your python path. For example, from inside a virtualenv::

    pip install django
    pip install django-sortable-listview

Then from your cloned folder::

    cd example_project
    python manage.py migrate
    python manage.py runserver

You should be able to see the example project at localhost:8000. A database is provided with some sample content. The username and password is admin/admin

Development and Tests
=====================

For your development setup::

    pip install -r requirements-dev.txt

To run the tests::

    tox

You may not want to run the whole tox suite when you are doing development.
In this case, uncomment the extra lines in requirements-dev.txt, but please
don't commit these changes. (Suggestions welcome on a better way to manage this)
# Change Log

## 0.43
  * Fix for Python 3 regression for params to remove (thanks @bw-aus, @ghost, @birdsarah)
  * Update tox to use Django 2.2 (thanks @birdsarah)

## 0.42

  * Fix for Django 1.11
  * Fix encoding problem (thanks @bw-aus)
  * Add CSS classes to template (thanks @JanMalte)
  * Fix missing translation (thanks @JanMalte and @valentjedi)
  * Preserve ordering of allowed sort fields (thanks @tooreht)

## 0.41

  * Further querystring improvement (thanks @fle)
  * Test against Django 1.8

## 0.40

  * Add support for Python 3
  * Add tox & travis to test all variations
  * Update license to MIT

## 0.30

  * Add support for preserving other query strings (thanks @fle)
  * Make sure tests run in 1.6 and 1.7 (thanks @fle)


